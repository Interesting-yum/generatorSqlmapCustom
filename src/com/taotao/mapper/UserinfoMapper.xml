<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taotao.mapper.UserinfoMapper">
  <resultMap id="BaseResultMap" type="com.taotao.pojo.Userinfo">
    <result column="userId" jdbcType="VARCHAR" property="userid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="speciality" jdbcType="VARCHAR" property="speciality" />
    <result column="dateOfBirth" jdbcType="VARCHAR" property="dateofbirth" />
    <result column="classes" jdbcType="VARCHAR" property="classes" />
    <result column="ethnic" jdbcType="VARCHAR" property="ethnic" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="workExperience" jdbcType="VARCHAR" property="workexperience" />
    <result column="jId" jdbcType="VARCHAR" property="jid" />
    <result column="accountId" jdbcType="VARCHAR" property="accountid" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userId, name, phone, email, gender, address, speciality, dateOfBirth, classes, ethnic, 
    education, workExperience, jId, accountId, status
  </sql>
  <select id="selectByExample" parameterType="com.taotao.pojo.UserinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.taotao.pojo.UserinfoExample">
    delete from userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taotao.pojo.Userinfo">
    insert into userinfo (userId, name, phone, 
      email, gender, address, 
      speciality, dateOfBirth, classes, 
      ethnic, education, workExperience, 
      jId, accountId, status
      )
    values (#{userid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{speciality,jdbcType=VARCHAR}, #{dateofbirth,jdbcType=VARCHAR}, #{classes,jdbcType=VARCHAR}, 
      #{ethnic,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, #{workexperience,jdbcType=VARCHAR}, 
      #{jid,jdbcType=VARCHAR}, #{accountid,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.taotao.pojo.Userinfo">
    insert into userinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userId,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="speciality != null">
        speciality,
      </if>
      <if test="dateofbirth != null">
        dateOfBirth,
      </if>
      <if test="classes != null">
        classes,
      </if>
      <if test="ethnic != null">
        ethnic,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="workexperience != null">
        workExperience,
      </if>
      <if test="jid != null">
        jId,
      </if>
      <if test="accountid != null">
        accountId,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="speciality != null">
        #{speciality,jdbcType=VARCHAR},
      </if>
      <if test="dateofbirth != null">
        #{dateofbirth,jdbcType=VARCHAR},
      </if>
      <if test="classes != null">
        #{classes,jdbcType=VARCHAR},
      </if>
      <if test="ethnic != null">
        #{ethnic,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="workexperience != null">
        #{workexperience,jdbcType=VARCHAR},
      </if>
      <if test="jid != null">
        #{jid,jdbcType=VARCHAR},
      </if>
      <if test="accountid != null">
        #{accountid,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taotao.pojo.UserinfoExample" resultType="java.lang.Long">
    select count(*) from userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update userinfo
    <set>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.speciality != null">
        speciality = #{record.speciality,jdbcType=VARCHAR},
      </if>
      <if test="record.dateofbirth != null">
        dateOfBirth = #{record.dateofbirth,jdbcType=VARCHAR},
      </if>
      <if test="record.classes != null">
        classes = #{record.classes,jdbcType=VARCHAR},
      </if>
      <if test="record.ethnic != null">
        ethnic = #{record.ethnic,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.workexperience != null">
        workExperience = #{record.workexperience,jdbcType=VARCHAR},
      </if>
      <if test="record.jid != null">
        jId = #{record.jid,jdbcType=VARCHAR},
      </if>
      <if test="record.accountid != null">
        accountId = #{record.accountid,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update userinfo
    set userId = #{record.userid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      speciality = #{record.speciality,jdbcType=VARCHAR},
      dateOfBirth = #{record.dateofbirth,jdbcType=VARCHAR},
      classes = #{record.classes,jdbcType=VARCHAR},
      ethnic = #{record.ethnic,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      workExperience = #{record.workexperience,jdbcType=VARCHAR},
      jId = #{record.jid,jdbcType=VARCHAR},
      accountId = #{record.accountid,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.taotao.pojo.Userinfo">
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="sno" jdbcType="VARCHAR" property="sno" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="loginName" jdbcType="VARCHAR" property="loginname" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="classes" jdbcType="VARCHAR" property="classes" />
    <result column="userType" jdbcType="INTEGER" property="usertype" />
    <result column="isUse" jdbcType="INTEGER" property="isuse" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="political" jdbcType="VARCHAR" property="political" />
    <result column="national" jdbcType="INTEGER" property="national" />
    <result column="identifier" jdbcType="VARCHAR" property="identifier" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userId, sno, username, loginName, password, gender, birthday, email, grade, major, 
    classes, userType, isUse, address, political, national, identifier, phone
  </sql>
  <select id="selectByExample" parameterType="com.taotao.pojo.UserinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.taotao.pojo.UserinfoExample">
    delete from userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taotao.pojo.Userinfo">
    insert into userinfo (userId, sno, username, 
      loginName, password, gender, 
      birthday, email, grade, 
      major, classes, userType, 
      isUse, address, political, 
      national, identifier, phone
      )
    values (#{userid,jdbcType=INTEGER}, #{sno,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{loginname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, 
      #{birthday,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{grade,jdbcType=INTEGER}, 
      #{major,jdbcType=VARCHAR}, #{classes,jdbcType=VARCHAR}, #{usertype,jdbcType=INTEGER}, 
      #{isuse,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{political,jdbcType=VARCHAR}, 
      #{national,jdbcType=INTEGER}, #{identifier,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.taotao.pojo.Userinfo">
    insert into userinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userId,
      </if>
      <if test="sno != null">
        sno,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="loginname != null">
        loginName,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="classes != null">
        classes,
      </if>
      <if test="usertype != null">
        userType,
      </if>
      <if test="isuse != null">
        isUse,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="political != null">
        political,
      </if>
      <if test="national != null">
        national,
      </if>
      <if test="identifier != null">
        identifier,
      </if>
      <if test="phone != null">
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="sno != null">
        #{sno,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null">
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="classes != null">
        #{classes,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null">
        #{usertype,jdbcType=INTEGER},
      </if>
      <if test="isuse != null">
        #{isuse,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="political != null">
        #{political,jdbcType=VARCHAR},
      </if>
      <if test="national != null">
        #{national,jdbcType=INTEGER},
      </if>
      <if test="identifier != null">
        #{identifier,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taotao.pojo.UserinfoExample" resultType="java.lang.Long">
    select count(*) from userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update userinfo
    <set>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.sno != null">
        sno = #{record.sno,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.loginname != null">
        loginName = #{record.loginname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.classes != null">
        classes = #{record.classes,jdbcType=VARCHAR},
      </if>
      <if test="record.usertype != null">
        userType = #{record.usertype,jdbcType=INTEGER},
      </if>
      <if test="record.isuse != null">
        isUse = #{record.isuse,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.political != null">
        political = #{record.political,jdbcType=VARCHAR},
      </if>
      <if test="record.national != null">
        national = #{record.national,jdbcType=INTEGER},
      </if>
      <if test="record.identifier != null">
        identifier = #{record.identifier,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update userinfo
    set userId = #{record.userid,jdbcType=INTEGER},
      sno = #{record.sno,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      loginName = #{record.loginname,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=INTEGER},
      major = #{record.major,jdbcType=VARCHAR},
      classes = #{record.classes,jdbcType=VARCHAR},
      userType = #{record.usertype,jdbcType=INTEGER},
      isUse = #{record.isuse,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      political = #{record.political,jdbcType=VARCHAR},
      national = #{record.national,jdbcType=INTEGER},
      identifier = #{record.identifier,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>